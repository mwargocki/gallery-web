name: Build and Deploy

on:
  push:
    branches: [ master ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: false

env:
  TARGET_DIR: "projects/gha-test"

jobs:
  build:
    name: 🛠️ Build gallery-web
    runs-on: ubuntu-latest

    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.name }}

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build frontend
        run: npm run build

      - name: 🏷️ Set artifact name
        id: set-artifact-name
        run: echo "name=gallery-web-${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: 📁 Zip build directory
        run: zip -r ${{ steps.set-artifact-name.outputs.name }}.zip build/

      - name: 🗃️ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.name }}
          path: ${{ steps.set-artifact-name.outputs.name }}.zip
          retention-days: 30

#  deploy:
#    name: 🚀 Deploy to mydevil.net
#    runs-on: ubuntu-latest
#    needs: build
#    environment:
#      name: production
#
#    steps:
#      - name: ⬇️ Download artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: gallery-api-${{ github.sha }}
#          path: dist
#
#      - name: 🧰 Install sshpass
#        run: sudo apt-get update && sudo apt-get install -y sshpass
#
#      - name: 🚀 Run pre-deploy script
#        run: |
#          sshpass -p "${{ secrets.PASSWORD }}" \
#          ssh -o StrictHostKeyChecking=no \
#          ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
#          "bash ~/${TARGET_DIR}/api-stop.sh"
#
#      - name: 📤 Upload as gallery-api.jar
#        run: |
#          sshpass -p "${{ secrets.PASSWORD }}" \
#          scp -o StrictHostKeyChecking=no \
#          dist/gallery-api-${{ github.sha }}.jar \
#          ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${TARGET_DIR}/backend/gallery-api.jar
#
#      - name: 🚀 Run post-deploy script
#        run: |
#          sshpass -p "${{ secrets.PASSWORD }}" \
#          ssh -o StrictHostKeyChecking=no \
#          ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
#          "bash ~/${TARGET_DIR}/api-start.sh"
