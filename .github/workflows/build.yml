name: Build and Deploy

on:
  push:
    branches: [ master ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  build:
    name: 🛠️ Build gallery-web
    runs-on: ubuntu-latest

    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.name }}

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🏗️ Build frontend
        run: npm run build

      - name: 🏷️ Set artifact name
        id: set-artifact-name
        run: echo "name=gallery-web-${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: 📁 Zip build directory
        run: zip -r ${{ steps.set-artifact-name.outputs.name }}.zip build/

      - name: 🗃️ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.name }}
          path: ${{ steps.set-artifact-name.outputs.name }}.zip
          retention-days: 30

  deploy:
    name: 🚀 Deploy Frontend
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production

    steps:
    - name: ⬇️ Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.artifact-name }}
        path: dist

    - name: 🧰 Install sshpass & unzip
      run: sudo apt-get update && sudo apt-get install -y sshpass unzip

    - name: 🧼 Clear target directory on server
      run: |
        sshpass -p "${{ secrets.PASSWORD }}" \
        ssh -o StrictHostKeyChecking=no \
        ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
        "rm -rf ~/${{ vars.TARGET_DIR }}/*"

    - name: 📤 Upload zip to server
      run: |
        sshpass -p "${{ secrets.PASSWORD }}" \
        scp -o StrictHostKeyChecking=no \
        dist/${{ needs.build.outputs.artifact-name }}.zip \
        ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/${{ vars.TARGET_DIR }}/frontend.zip

    - name: 📦 Unzip on server
      run: |
        sshpass -p "${{ secrets.PASSWORD }}" \
        ssh -o StrictHostKeyChecking=no \
        ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
        "cd ~/${{ vars.TARGET_DIR }} && unzip -q frontend.zip && rm frontend.zip"
